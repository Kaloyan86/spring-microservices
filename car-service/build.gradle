/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.9'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.9'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.9'
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.modelmapper:modelmapper:2.3.0'
    implementation 'javax.validation:validation-api:2.0.0.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.2.Final'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.3'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.6.9'
    implementation 'org.springframework.cloud:spring-cloud-commons:3.1.3'
    implementation 'org.springframework.kafka:spring-kafka:2.8.7'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.1'
    runtimeOnly 'mysql:mysql-connector-java:8.0.29'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.9'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
    testImplementation 'org.testcontainers:mysql:1.16.2'
}

group = 'com'
version = '0.0.1'
description = 'car-service'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
targetCompatibility = JavaVersion.VERSION_11

test {
    useJUnitPlatform()
}
jib {
    jib.container.creationTime = 'USE_CURRENT_TIMESTAMP'
    jib.to {
        image = 'kaloyankostadinov/car-service'
        tags = [version, 'latest']
        auth {
            username = property('username')
            password = property('password')
        }
    }
}
