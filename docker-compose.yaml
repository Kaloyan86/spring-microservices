version: '3.3'

services:
  db:
    image: 'mysql:8.0'
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_PASSWORD=12345
      - MYSQL_USERNAME=root
    volumes:
      - db-datavolume:/var/lib/db

  car-service1:
    depends_on:
      - "db"
      - "eureka-server"
    image: kaloyankostadinov/car-service:latest
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      - MYSQLHOST=db
      - MYSQL_DATABASE=rest_api_crud_db1
      - EUREKA_USERNAME=user
      - EUREKA_PASSWORD=pass
      - KAFKA_TOPIC_GROUP=group1
      - EUREKA_HOSTNAME=eureka
      - KAFKA_HOSTNAME=kafka1
      - COMMAND_LINE_RUNNER=false

  car-service2:
      depends_on:
        - "db"
        - "eureka-server"
      image: kaloyankostadinov/car-service:latest
      restart: on-failure
      ports:
        - "8100:8080"
      environment:
        - MYSQLHOST=db
        - MYSQL_DATABASE=rest_api_crud_db1
        - KAFKA_TOPIC_GROUP=group2
        - EUREKA_USERNAME=user
        - EUREKA_PASSWORD=pass
        - EUREKA_HOSTNAME=eureka
        - KAFKA_HOSTNAME=kafka1
        - COMMAND_LINE_RUNNER=false

  gateway-service:
      image: kaloyankostadinov/gateway-service:latest
      restart: on-failure
      ports:
        - "8000:8000"
      environment:
        - EUREKA_USERNAME=user
        - EUREKA_PASSWORD=pass
        - EUREKA_HOSTNAME=eureka

  eureka-server:
    image: kaloyankostadinov/eureka-server:latest
    hostname: eureka
    ports:
      - "8761:8761"

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka1"

  zoo1:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.2.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

volumes:
  db-datavolume:
